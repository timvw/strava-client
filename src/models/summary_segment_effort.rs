/*
 * Strava API v3
 *
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SummarySegmentEffort {
    /// The unique identifier of this effort
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i64>,
    /// The unique identifier of the activity related to this effort
    #[serde(rename = "activity_id", skip_serializing_if = "Option::is_none")]
    pub activity_id: Option<i64>,
    /// The effort's elapsed time
    #[serde(rename = "elapsed_time", skip_serializing_if = "Option::is_none")]
    pub elapsed_time: Option<i32>,
    /// The time at which the effort was started.
    #[serde(rename = "start_date", skip_serializing_if = "Option::is_none")]
    pub start_date: Option<String>,
    /// The time at which the effort was started in the local timezone.
    #[serde(rename = "start_date_local", skip_serializing_if = "Option::is_none")]
    pub start_date_local: Option<String>,
    /// The effort's distance in meters
    #[serde(rename = "distance", skip_serializing_if = "Option::is_none")]
    pub distance: Option<f32>,
    /// Whether this effort is the current best on the leaderboard
    #[serde(rename = "is_kom", skip_serializing_if = "Option::is_none")]
    pub is_kom: Option<bool>,
}

impl SummarySegmentEffort {
    pub fn new() -> SummarySegmentEffort {
        SummarySegmentEffort {
            id: None,
            activity_id: None,
            elapsed_time: None,
            start_date: None,
            start_date_local: None,
            distance: None,
            is_kom: None,
        }
    }
}
