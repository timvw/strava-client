/*
 * Strava API v3
 *
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct HeartRateZoneRanges {
    /// Whether the athlete has set their own custom heart rate zones
    #[serde(rename = "custom_zones", skip_serializing_if = "Option::is_none")]
    pub custom_zones: Option<bool>,
    #[serde(rename = "zones", skip_serializing_if = "Option::is_none")]
    pub zones: Option<Vec<crate::models::ZoneRange>>,
}

impl HeartRateZoneRanges {
    pub fn new() -> HeartRateZoneRanges {
        HeartRateZoneRanges {
            custom_zones: None,
            zones: None,
        }
    }
}


