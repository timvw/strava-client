/*
 * Strava API v3
 *
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Lap {
    /// The unique identifier of this lap
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i64>,
    #[serde(rename = "activity", skip_serializing_if = "Option::is_none")]
    pub activity: Option<Box<crate::models::MetaActivity>>,
    #[serde(rename = "athlete", skip_serializing_if = "Option::is_none")]
    pub athlete: Option<Box<crate::models::MetaAthlete>>,
    /// The lap's average cadence
    #[serde(rename = "average_cadence", skip_serializing_if = "Option::is_none")]
    pub average_cadence: Option<f32>,
    /// The lap's average speed
    #[serde(rename = "average_speed", skip_serializing_if = "Option::is_none")]
    pub average_speed: Option<f32>,
    /// The lap's distance, in meters
    #[serde(rename = "distance", skip_serializing_if = "Option::is_none")]
    pub distance: Option<f32>,
    /// The lap's elapsed time, in seconds
    #[serde(rename = "elapsed_time", skip_serializing_if = "Option::is_none")]
    pub elapsed_time: Option<i32>,
    /// The start index of this effort in its activity's stream
    #[serde(rename = "start_index", skip_serializing_if = "Option::is_none")]
    pub start_index: Option<i32>,
    /// The end index of this effort in its activity's stream
    #[serde(rename = "end_index", skip_serializing_if = "Option::is_none")]
    pub end_index: Option<i32>,
    /// The index of this lap in the activity it belongs to
    #[serde(rename = "lap_index", skip_serializing_if = "Option::is_none")]
    pub lap_index: Option<i32>,
    /// The maximum speed of this lat, in meters per second
    #[serde(rename = "max_speed", skip_serializing_if = "Option::is_none")]
    pub max_speed: Option<f32>,
    /// The lap's moving time, in seconds
    #[serde(rename = "moving_time", skip_serializing_if = "Option::is_none")]
    pub moving_time: Option<i32>,
    /// The name of the lap
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The athlete's pace zone during this lap
    #[serde(rename = "pace_zone", skip_serializing_if = "Option::is_none")]
    pub pace_zone: Option<i32>,
    #[serde(rename = "split", skip_serializing_if = "Option::is_none")]
    pub split: Option<i32>,
    /// The time at which the lap was started.
    #[serde(rename = "start_date", skip_serializing_if = "Option::is_none")]
    pub start_date: Option<String>,
    /// The time at which the lap was started in the local timezone.
    #[serde(rename = "start_date_local", skip_serializing_if = "Option::is_none")]
    pub start_date_local: Option<String>,
    /// The elevation gain of this lap, in meters
    #[serde(rename = "total_elevation_gain", skip_serializing_if = "Option::is_none")]
    pub total_elevation_gain: Option<f32>,
}

impl Lap {
    pub fn new() -> Lap {
        Lap {
            id: None,
            activity: None,
            athlete: None,
            average_cadence: None,
            average_speed: None,
            distance: None,
            elapsed_time: None,
            start_index: None,
            end_index: None,
            lap_index: None,
            max_speed: None,
            moving_time: None,
            name: None,
            pace_zone: None,
            split: None,
            start_date: None,
            start_date_local: None,
            total_elevation_gain: None,
        }
    }
}


