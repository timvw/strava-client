/*
 * Strava API v3
 *
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Split {
    /// The average speed of this split, in meters per second
    #[serde(rename = "average_speed", skip_serializing_if = "Option::is_none")]
    pub average_speed: Option<f32>,
    /// The distance of this split, in meters
    #[serde(rename = "distance", skip_serializing_if = "Option::is_none")]
    pub distance: Option<f32>,
    /// The elapsed time of this split, in seconds
    #[serde(rename = "elapsed_time", skip_serializing_if = "Option::is_none")]
    pub elapsed_time: Option<i32>,
    /// The elevation difference of this split, in meters
    #[serde(rename = "elevation_difference", skip_serializing_if = "Option::is_none")]
    pub elevation_difference: Option<f32>,
    /// The pacing zone of this split
    #[serde(rename = "pace_zone", skip_serializing_if = "Option::is_none")]
    pub pace_zone: Option<i32>,
    /// The moving time of this split, in seconds
    #[serde(rename = "moving_time", skip_serializing_if = "Option::is_none")]
    pub moving_time: Option<i32>,
    /// N/A
    #[serde(rename = "split", skip_serializing_if = "Option::is_none")]
    pub split: Option<i32>,
}

impl Split {
    pub fn new() -> Split {
        Split {
            average_speed: None,
            distance: None,
            elapsed_time: None,
            elevation_difference: None,
            pace_zone: None,
            moving_time: None,
            split: None,
        }
    }
}


